plugins {
    id("org.jetbrains.kotlin.jvm") version "${kotlinVersion}"
    id("org.jetbrains.kotlin.kapt") version "${kotlinVersion}"
    id("org.jetbrains.kotlin.plugin.allopen") version "${kotlinVersion}"
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "2.0.3"
    id("com.google.protobuf") version "0.8.17"
}

version = "0.1"
group = "topfarming.poc"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("topfarming.poc.*")
    }
}

dependencies {
    implementation("io.micronaut:micronaut-http-client:${micronautVersion}")
    implementation("io.micronaut:micronaut-runtime:${micronautVersion}")
    implementation("io.micronaut:micronaut-validation:${micronautVersion}")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")

    //Modelmapper
    implementation("org.modelmapper:modelmapper:${modelmapperVersion}")

    //Protobuf
    implementation("com.google.protobuf:protobuf-kotlin:${protobufVersion}")
    implementation("io.micronaut.grpc:micronaut-protobuff-support")

    //Redis
    implementation("io.micronaut.redis:micronaut-redis-lettuce")
    implementation 'org.junit.jupiter:junit-jupiter:5.7.0'

    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.h2database:h2")
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
    compileOnly("org.graalvm.nativeimage:svm")

    testImplementation("org.jetbrains.kotlin:kotlin-test:${kotlinVersion}")
    testImplementation("org.mockito:mockito-core:3.11.2")
    testImplementation("org.mockito:mockito-junit-jupiter:3.11.2")
    testImplementation("org.mockito.kotlin:mockito-kotlin:3.2.0")

    //Redis
    testImplementation("com.github.kstyrc:embedded-redis:0.6")
}


application {
    mainClass.set("topfarming.poc.ApplicationKt")
}

java {
    sourceCompatibility = JavaVersion.toVersion("1.8")
}

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
}

sourceSets {
    main {
        proto {
            // In addition to the default 'src/main/proto'
            srcDir 'src/main/protobuf'
            srcDir 'src/main/protocolbuffers'
            // In addition to the default '**/*.proto' (use with caution).
            // Using an extension other than 'proto' is NOT recommended,
            // because when proto files are published along with class files, we can
            // only tell the type of a file from its extension.
            include '**/*.protodevel'
        }
        java {
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
    test {
        proto {
            // In addition to the default 'src/test/proto'
            srcDir 'src/test/protocolbuffers'
        }
    }
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    nativeImage {
        args('--verbose')
        imageName('mn-graalvm-application')
    }
}


